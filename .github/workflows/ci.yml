name: Django CI/CD Pipeline

on: [push, pull_request]

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8

      - name: Run Flake8
        run: flake8 .

  test:
    needs: lint
    runs-on: ubuntu-latest
    env:
      SECRET_KEY: ${{ secrets.SECRET_KEY }}
      DJANGO_SETTINGS_MODULE: config.settings

    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Cache pip
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run tests
        run: python manage.py test

  deploy:
    needs: test
    if: github.ref == 'refs/heads/main'  # Развертываем только из main ветки
    runs-on: ubuntu-latest
    env:
      DEPLOY_DIR: ${{ secrets.DEPLOY_DIR }}
      SSH_OPTS: "-o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null"

    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Setup SSH
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.SSH_KEY }}

      - name: Validate SSH connection
        run: ssh $SSH_OPTS ${{ secrets.SSH_USER }}@${{ secrets.SERVER_IP }} "echo 'SSH connection successful'"

      - name: Prepare deployment directory
        run: |
          ssh $SSH_OPTS ${{ secrets.SSH_USER }}@${{ secrets.SERVER_IP }} "
            sudo mkdir -p $DEPLOY_DIR
            sudo chown -R ${{ secrets.SSH_USER }}: $DEPLOY_DIR
          "

      - name: Sync project files
        run: |
          rsync $SSH_OPTS -avz \
            --exclude '.git' \
            --exclude '.github' \
            --exclude '__pycache__' \
            --exclude 'venv' \
            --include='requirements.txt' \
            --include='manage.py' \
            --include='*/' \
            --include='*.py' \
            --delete \
            . ${{ secrets.SSH_USER }}@${{ secrets.SERVER_IP }}:$DEPLOY_DIR

      - name: Install system dependencies
        run: |
          ssh $SSH_OPTS ${{ secrets.SSH_USER }}@${{ secrets.SERVER_IP }} << 'EOF'
            set -e
            sudo apt-get update
            sudo apt-get install -y python3-venv python3-dev python3-pip
          EOF

      - name: Setup virtual environment
        run: |
          ssh $SSH_OPTS ${{ secrets.SSH_USER }}@${{ secrets.SERVER_IP }} << 'EOF'
            set -e
            cd $DEPLOY_DIR
            if [ ! -f "requirements.txt" ]; then
              echo "Error: requirements.txt not found!"
              exit 1
            fi
            python3 -m venv venv
            source venv/bin/activate
            pip install --upgrade pip wheel
            pip install -r requirements.txt
          EOF

      - name: Run migrations
        run: |
          ssh $SSH_OPTS ${{ secrets.SSH_USER }}@${{ secrets.SERVER_IP }} << 'EOF'
            set -e
            cd $DEPLOY_DIR
            source venv/bin/activate
            python manage.py migrate --noinput
          EOF

      - name: Collect static files
        run: |
          ssh $SSH_OPTS ${{ secrets.SSH_USER }}@${{ secrets.SERVER_IP }} << 'EOF'
            set -e
            cd $DEPLOY_DIR
            source venv/bin/activate
            python manage.py collectstatic --noinput
          EOF

      - name: Restart application
        run: |
          ssh $SSH_OPTS ${{ secrets.SSH_USER }}@${{ secrets.SERVER_IP }} << 'EOF'
            set -e
            sudo systemctl restart myapp.service
            echo "Application restarted successfully"
          EOF